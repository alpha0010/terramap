#include "TileColor.h"

#include "World.h"
#include <cmath>

namespace
{
// clang-format off
uint8_t blockColors[] = {
    151, 107, 75, 128, 128, 128, 28, 216, 94, 26, 196, 84, 253, 221, 3, 151,
    107, 75, 140, 101, 80, 150, 67, 22, 185, 164, 23, 185, 194, 195, 119, 105,
    79, 119, 105, 79, 174, 24, 69, 133, 213, 247, 191, 142, 111, 191, 142, 111,
    140, 130, 116, 144, 148, 144, 191, 142, 111, 191, 142, 111, 163, 116, 81,
    174, 129, 92, 98, 95, 167, 141, 137, 223, 122, 116, 218, 109, 90, 128, 119,
    101, 125, 54, 154, 54, 151, 79, 80, 175, 105, 128, 151, 107, 75, 141, 120,
    168, 151, 135, 183, 253, 221, 3, 235, 166, 135, 226, 145, 30, 230, 89, 92,
    104, 86, 84, 128, 128, 128, 181, 62, 59, 146, 81, 68, 66, 84, 109, 251,
    235, 127, 84, 100, 63, 107, 68, 99, 185, 164, 23, 185, 194, 195, 150, 67,
    22, 128, 128, 128, 89, 201, 255, 170, 48, 114, 192, 202, 203, 23, 177, 76,
    186, 168, 84, 200, 246, 254, 191, 142, 111, 43, 40, 84, 68, 68, 76, 142,
    66, 66, 92, 68, 73, 143, 215, 29, 135, 196, 26, 121, 176, 24, 110, 140,
    182, 196, 96, 114, 56, 150, 97, 160, 118, 58, 140, 58, 166, 125, 191, 197,
    190, 150, 92, 93, 127, 255, 182, 175, 130, 182, 175, 130, 27, 197, 109, 96,
    197, 27, 26, 26, 26, 142, 66, 66, 238, 85, 70, 121, 110, 97, 191, 142, 111,
    73, 120, 17, 245, 133, 191, 246, 197, 26, 246, 197, 26, 246, 197, 26, 192,
    192, 192, 191, 142, 111, 191, 142, 111, 191, 142, 111, 191, 142, 111, 144,
    148, 144, 13, 88, 130, 213, 229, 237, 253, 221, 3, 191, 142, 111, 255, 162,
    31, 144, 148, 144, 144, 148, 144, 253, 221, 3, 144, 148, 144, 253, 221, 3,
    191, 142, 111, 229, 212, 73, 141, 98, 77, 191, 142, 111, 144, 148, 144,
    191, 142, 111, 11, 80, 143, 91, 169, 169, 78, 193, 227, 48, 186, 135, 128,
    26, 52, 103, 98, 122, 48, 208, 234, 191, 142, 111, 33, 171, 207, 238, 225,
    218, 181, 172, 190, 238, 225, 218, 107, 92, 108, 92, 68, 73, 11, 80, 143,
    91, 169, 169, 106, 107, 118, 73, 51, 36, 141, 175, 255, 159, 209, 229, 128,
    204, 230, 191, 142, 111, 255, 117, 224, 128, 128, 128, 52, 52, 52, 144,
    148, 144, 231, 53, 56, 166, 187, 153, 253, 114, 114, 213, 203, 204, 144,
    148, 144, 128, 128, 128, 191, 142, 111, 98, 95, 167, 192, 59, 59, 144, 148,
    144, 144, 148, 144, 144, 148, 144, 192, 30, 30, 43, 192, 30, 211, 236, 241,
    211, 236, 241, 220, 50, 50, 128, 26, 52, 190, 171, 94, 128, 133, 184, 239,
    141, 126, 190, 171, 94, 131, 162, 161, 170, 171, 157, 104, 100, 126, 145,
    81, 85, 148, 133, 98, 255, 76, 76, 144, 195, 232, 184, 219, 240, 174, 145,
    214, 218, 182, 204, 115, 173, 229, 129, 125, 93, 62, 82, 114, 132, 157,
    127, 152, 171, 198, 27, 109, 69, 33, 135, 85, 191, 142, 111, 253, 221, 3,
    253, 221, 3, 129, 125, 93, 132, 157, 127, 152, 171, 198, 208, 94, 201, 49,
    134, 114, 126, 134, 49, 134, 59, 49, 43, 86, 140, 121, 49, 134, 29, 106,
    88, 99, 99, 99, 99, 99, 99, 99, 99, 99, 73, 120, 17, 223, 255, 255, 182,
    175, 130, 151, 107, 75, 26, 196, 84, 56, 121, 255, 157, 157, 107, 134, 22,
    34, 147, 144, 178, 97, 200, 225, 62, 61, 52, 208, 80, 80, 216, 152, 144,
    203, 61, 64, 213, 178, 28, 128, 44, 45, 125, 55, 65, 186, 50, 52, 124, 175,
    201, 144, 148, 144, 88, 105, 118, 144, 148, 144, 192, 59, 59, 191, 233,
    115, 144, 148, 144, 137, 120, 67, 103, 103, 103, 254, 121, 2, 191, 142,
    111, 144, 148, 144, 144, 148, 144, 144, 148, 144, 144, 148, 144, 239, 90,
    50, 231, 96, 228, 57, 85, 101, 107, 132, 139, 227, 125, 22, 141, 56, 0, 74,
    197, 155, 144, 148, 144, 255, 156, 12, 131, 79, 13, 224, 194, 101, 145, 81,
    85, 107, 182, 29, 53, 44, 41, 214, 184, 46, 149, 232, 87, 255, 241, 51,
    225, 128, 206, 224, 194, 101, 120, 85, 60, 77, 74, 72, 99, 50, 30, 198,
    196, 170, 200, 245, 253, 99, 50, 30, 99, 50, 30, 140, 150, 150, 219, 71,
    38, 235, 38, 231, 86, 85, 92, 235, 150, 23, 153, 131, 44, 57, 48, 97, 248,
    158, 92, 107, 49, 154, 154, 148, 49, 49, 49, 154, 49, 154, 68, 154, 49, 77,
    85, 89, 118, 154, 83, 49, 221, 79, 255, 250, 255, 79, 79, 102, 255, 79,
    255, 89, 255, 79, 79, 240, 240, 247, 255, 145, 79, 191, 142, 111, 187, 255,
    107, 107, 250, 255, 121, 119, 101, 128, 128, 128, 190, 171, 94, 122, 217,
    232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217,
    232, 122, 217, 232, 122, 217, 232, 128, 128, 128, 150, 67, 22, 122, 217,
    232, 122, 217, 232, 79, 128, 17, 122, 217, 232, 122, 217, 232, 122, 217,
    232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217,
    232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 144, 148,
    144, 144, 148, 144, 144, 148, 144, 144, 148, 144, 144, 148, 144, 144, 148,
    144, 144, 148, 144, 144, 148, 144, 144, 148, 144, 122, 217, 232, 122, 217,
    232, 117, 61, 25, 204, 93, 73, 87, 150, 154, 181, 164, 125, 235, 114, 80,
    157, 176, 226, 118, 227, 129, 227, 118, 215, 96, 68, 48, 203, 185, 151, 96,
    77, 64, 198, 170, 104, 182, 141, 86, 228, 213, 173, 129, 125, 93, 9, 61,
    191, 253, 32, 3, 200, 246, 254, 15, 15, 15, 226, 118, 76, 161, 172, 173,
    204, 181, 72, 190, 190, 178, 191, 142, 111, 217, 174, 137, 253, 62, 3, 144,
    148, 144, 85, 255, 160, 122, 217, 232, 96, 248, 2, 105, 74, 202, 29, 240,
    255, 254, 202, 80, 131, 252, 245, 255, 156, 12, 149, 212, 89, 236, 74, 79,
    44, 26, 233, 144, 148, 144, 55, 97, 155, 31, 31, 31, 238, 97, 94, 28, 216,
    94, 141, 107, 89, 141, 107, 89, 233, 203, 24, 168, 178, 204, 122, 217, 232,
    122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232,
    122, 217, 232, 146, 136, 205, 223, 232, 233, 168, 178, 204, 50, 46, 104,
    50, 46, 104, 127, 116, 194, 249, 101, 189, 252, 128, 201, 9, 61, 191, 253,
    32, 3, 255, 156, 12, 160, 120, 92, 191, 142, 111, 160, 120, 100, 251, 209,
    240, 191, 142, 111, 254, 121, 2, 28, 216, 94, 221, 136, 144, 131, 206, 12,
    87, 21, 144, 127, 92, 69, 127, 92, 69, 127, 92, 69, 127, 92, 69, 253, 32,
    3, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 191, 142,
    111, 198, 124, 78, 212, 192, 100, 100, 82, 126, 77, 76, 66, 96, 68, 117,
    68, 60, 51, 174, 168, 186, 205, 152, 186, 212, 148, 88, 140, 140, 140, 120,
    120, 120, 255, 227, 132, 85, 83, 82, 85, 83, 82, 75, 139, 166, 227, 46, 46,
    75, 139, 166, 122, 217, 232, 122, 217, 232, 249, 75, 7, 0, 160, 170, 160,
    87, 234, 22, 173, 254, 88, 95, 114, 99, 255, 107, 65, 75, 90, 65, 75, 90,
    245, 197, 1, 146, 155, 187, 146, 155, 187, 168, 38, 47, 183, 53, 62, 255,
    255, 255, 220, 220, 220, 39, 168, 96, 39, 94, 168, 242, 221, 100, 224, 100,
    242, 197, 193, 216, 54, 183, 111, 54, 109, 183, 255, 236, 115, 239, 115,
    255, 212, 208, 231, 238, 51, 53, 174, 129, 92, 3, 144, 201, 144, 148, 144,
    191, 176, 124, 240, 240, 240, 255, 66, 152, 179, 132, 255, 0, 206, 180, 91,
    186, 240, 92, 240, 91, 240, 91, 147, 255, 150, 181, 179, 132, 255, 174, 16,
    176, 48, 225, 110, 179, 132, 255, 150, 164, 206, 211, 198, 111, 190, 223,
    232, 141, 163, 181, 212, 192, 100, 231, 178, 28, 155, 214, 240, 233, 183,
    128, 51, 84, 195, 205, 153, 73, 129, 56, 121, 129, 56, 121, 191, 142, 111,
    191, 142, 111, 191, 142, 111, 190, 160, 140, 85, 114, 123, 116, 94, 97,
    191, 142, 111, 160, 160, 160, 28, 216, 94, 108, 34, 35, 178, 114, 68, 120,
    50, 50, 66, 84, 109, 84, 100, 63, 107, 68, 99, 73, 120, 17, 198, 134, 88,
    191, 142, 111, 191, 142, 111, 127, 92, 69, 255, 29, 136, 211, 211, 211, 60,
    20, 160, 78, 193, 227, 250, 249, 252, 224, 219, 236, 253, 227, 215, 165,
    159, 153, 191, 142, 111, 202, 174, 165, 160, 187, 142, 254, 158, 35, 34,
    221, 151, 249, 170, 236, 35, 200, 254, 92, 75, 118, 122, 217, 232, 61, 61,
    61, 5, 5, 5, 5, 5, 5, 50, 50, 60, 191, 142, 111, 187, 68, 74, 49, 134, 114,
    126, 134, 49, 134, 59, 49, 43, 86, 140, 121, 49, 134, 254, 121, 2, 26, 196,
    84, 28, 216, 109, 224, 219, 236, 122, 217, 232, 122, 217, 232, 122, 217,
    232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 182, 175,
    130, 99, 150, 8, 107, 182, 0, 144, 148, 144, 122, 217, 232, 122, 217, 232,
    114, 254, 2, 114, 254, 2, 0, 197, 208, 0, 197, 208, 122, 217, 232, 208, 0,
    126, 208, 0, 126, 50, 107, 197, 122, 217, 232, 122, 217, 232, 122, 217,
    232, 255, 126, 145, 60, 60, 60, 120, 110, 100, 120, 110, 100, 54, 83, 20,
    122, 217, 232, 122, 217, 232, 186, 168, 84, 122, 217, 232, 122, 217, 232,
    122, 217, 232, 122, 217, 232, 60, 60, 60, 122, 217, 232, 122, 217, 232,
    150, 67, 22, 148, 158, 184, 165, 168, 26, 165, 168, 26, 87, 127, 220, 99,
    99, 99, 233, 180, 90, 144, 148, 144, 248, 203, 233, 203, 248, 218, 160,
    242, 255, 165, 168, 26, 255, 186, 212, 191, 142, 111, 76, 57, 44, 125, 61,
    65, 30, 26, 84, 178, 104, 58, 172, 155, 110, 99, 99, 99, 122, 217, 232,
    255, 150, 150, 122, 217, 232, 127, 127, 127, 127, 127, 127, 127, 127, 127,
    127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
    114, 81, 56, 254, 121, 2, 119, 105, 79, 119, 105, 79, 151, 107, 75, 151,
    107, 75, 28, 216, 94, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122,
    217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122,
    217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122, 217, 232, 122,
    217, 232, 122, 217, 232, 250, 100, 50, 250, 100, 50, 151, 107, 75, 151,
    107, 75, 233, 207, 94, 128, 128, 128, 122, 217, 232, 122, 217, 232, 250,
    250, 250, 235, 235, 249, 220, 210, 245, 210, 91, 77, 220, 12, 237, 220, 12,
    237, 255, 76, 76, 255, 76, 76, 122, 217, 232, 117, 145, 73, 122, 234, 225,
    122, 217, 232, 210, 140, 100, 145, 120, 120, 145, 120, 120, 122, 116, 218,
    200, 120, 75, 200, 120, 75, 110, 105, 255, 122, 217, 232, 235, 125, 150,
    149, 212, 89, 122, 217, 232, 122, 217, 232, 122, 217, 232, 108, 133, 140,
    99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 107, 182, 29, 107, 182, 29,
    151, 79, 80, 200, 44, 28, 225, 128, 206, 21, 124, 212, 35, 205, 215, 200,
    105, 230, 247, 228, 254, 255, 150, 150, 141, 137, 223, 208, 80, 80, 24,
    203, 233, 128, 128, 128, 174, 24, 69, 115, 60, 40, 247, 228, 254, 151, 107,
    75, 83, 46, 57, 91, 87, 167, 23, 33, 81, 53, 133, 103, 11, 67, 80, 40, 49,
    60, 21, 13, 77, 195, 201, 215, 66, 84, 109, 84, 100, 63, 107, 68, 99, 185,
    164, 23, 185, 194, 195, 150, 67, 22, 100, 90, 190, 142, 66, 66, 11, 80,
    143, 91, 169, 169, 254, 121, 2, 208, 0, 126, 114, 254, 2, 0, 197, 208, 220,
    12, 237, 255, 76, 76
};

uint8_t wallColors[] = {
    0, 0, 0, 52, 52, 52, 88, 61, 46, 61, 58, 78, 73, 51, 36, 52, 52, 52, 91,
    30, 30, 27, 31, 42, 31, 39, 26, 41, 28, 36, 74, 62, 12, 46, 56, 59, 75, 32,
    11, 67, 37, 37, 15, 15, 15, 52, 43, 45, 88, 61, 46, 27, 31, 42, 31, 39, 26,
    41, 28, 36, 15, 15, 15, 54, 89, 98, 113, 99, 99, 38, 38, 43, 53, 39, 41,
    11, 35, 62, 21, 63, 70, 88, 61, 46, 81, 84, 101, 88, 23, 23, 28, 88, 23,
    78, 87, 99, 86, 17, 40, 49, 47, 83, 69, 67, 41, 51, 51, 70, 87, 59, 55, 69,
    67, 41, 49, 57, 49, 78, 79, 73, 85, 102, 103, 52, 50, 62, 71, 42, 44, 73,
    66, 50, 52, 52, 52, 60, 59, 51, 48, 57, 47, 71, 77, 85, 52, 52, 52, 52, 52,
    52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 40, 56, 50, 49, 48, 36,
    43, 33, 32, 31, 40, 49, 48, 35, 52, 88, 61, 46, 1, 52, 20, 55, 39, 26, 39,
    33, 26, 30, 80, 48, 53, 80, 30, 30, 80, 48, 30, 80, 48, 53, 80, 30, 30, 80,
    48, 43, 42, 68, 30, 70, 80, 78, 105, 135, 52, 84, 12, 190, 204, 223, 64,
    62, 80, 65, 65, 35, 20, 46, 104, 61, 13, 16, 63, 39, 26, 51, 47, 96, 64,
    62, 80, 101, 51, 51, 77, 64, 34, 62, 38, 41, 48, 78, 93, 54, 63, 69, 138,
    73, 38, 50, 15, 8, 115, 68, 124, 129, 114, 74, 62, 86, 123, 90, 121, 94,
    135, 62, 61, 100, 96, 103, 32, 40, 45, 44, 41, 50, 72, 50, 77, 78, 50, 69,
    36, 45, 44, 38, 49, 50, 32, 40, 45, 44, 41, 50, 72, 50, 77, 78, 50, 69, 36,
    45, 44, 38, 49, 50, 97, 72, 51, 53, 53, 53, 138, 73, 38, 94, 25, 17, 125,
    36, 122, 51, 35, 27, 50, 15, 8, 135, 58, 0, 65, 52, 15, 39, 42, 51, 89, 26,
    27, 126, 123, 115, 8, 50, 19, 95, 21, 24, 17, 31, 65, 192, 173, 143, 114,
    114, 131, 136, 119, 7, 8, 72, 3, 117, 132, 82, 100, 102, 114, 30, 118, 226,
    93, 6, 102, 64, 40, 169, 39, 34, 180, 87, 94, 125, 6, 6, 6, 69, 72, 186,
    130, 62, 16, 22, 123, 163, 40, 86, 151, 183, 75, 15, 83, 80, 100, 115, 65,
    68, 119, 108, 81, 59, 67, 71, 222, 216, 202, 90, 112, 105, 62, 28, 87, 120,
    120, 120, 120, 59, 19, 59, 59, 59, 229, 218, 161, 73, 59, 50, 81, 69, 62,
    102, 75, 34, 103, 76, 36, 255, 145, 79, 221, 79, 255, 240, 240, 247, 79,
    255, 89, 154, 83, 49, 107, 49, 154, 85, 89, 118, 49, 154, 68, 154, 49, 77,
    49, 49, 154, 154, 148, 49, 255, 79, 79, 79, 102, 255, 250, 255, 79, 70, 68,
    51, 84, 97, 84, 5, 5, 5, 59, 39, 22, 59, 39, 22, 163, 96, 0, 94, 163, 46,
    117, 32, 59, 20, 11, 203, 74, 69, 88, 60, 30, 30, 111, 117, 135, 111, 117,
    135, 25, 23, 54, 25, 23, 54, 74, 71, 129, 111, 117, 135, 25, 23, 54, 52,
    52, 52, 38, 9, 66, 149, 80, 51, 82, 63, 80, 65, 61, 77, 64, 65, 92, 76, 53,
    84, 144, 67, 52, 149, 48, 48, 111, 32, 36, 147, 48, 55, 97, 67, 51, 112,
    80, 62, 88, 61, 46, 127, 94, 76, 143, 50, 123, 136, 120, 131, 219, 92, 143,
    113, 64, 150, 74, 67, 60, 60, 78, 59, 0, 54, 21, 74, 97, 72, 40, 37, 35,
    77, 63, 66, 111, 6, 6, 88, 67, 59, 88, 87, 80, 71, 71, 67, 76, 52, 60, 89,
    48, 59, 158, 100, 64, 62, 45, 75, 57, 14, 12, 96, 72, 133, 67, 55, 80, 64,
    37, 29, 70, 51, 91, 51, 18, 4, 57, 55, 52, 68, 68, 68, 148, 138, 74, 95,
    137, 191, 160, 2, 75, 100, 55, 164, 0, 117, 101, 110, 90, 78, 47, 69, 75,
    91, 67, 70, 60, 36, 39, 140, 75, 48, 127, 49, 44, 200, 44, 18, 24, 93, 66,
    160, 87, 234, 6, 106, 255, 146, 95, 53, 5, 5, 5, 5, 5, 5, 63, 39, 26, 102,
    102, 102, 61, 58, 78, 52, 43, 45, 81, 84, 101, 85, 102, 103, 52, 52, 52,
    52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 40, 56, 50, 49,
    48, 36, 43, 33, 32, 31, 40, 49, 48, 35, 52, 88, 61, 46, 55, 39, 26, 39, 33,
    26, 43, 42, 68, 30, 70, 80, 78, 105, 135, 51, 47, 96, 101, 51, 51, 62, 38,
    41, 59, 39, 22, 59, 39, 22, 111, 117, 135, 25, 23, 54, 52, 52, 52, 149, 80,
    51, 82, 63, 80, 65, 61, 77, 64, 65, 92, 76, 53, 84, 144, 67, 52, 149, 48,
    48, 111, 32, 36, 147, 48, 55, 97, 67, 51, 112, 80, 62, 88, 61, 46, 127, 94,
    76, 143, 50, 123, 136, 120, 131, 219, 92, 143, 113, 64, 150, 74, 67, 60,
    60, 78, 59, 0, 54, 21, 74, 97, 72, 40, 37, 35, 77, 63, 66, 111, 6, 6, 88,
    67, 59, 88, 87, 80, 71, 71, 67, 76, 52, 60, 89, 48, 59, 158, 100, 64, 62,
    45, 75, 57, 14, 12, 96, 72, 133, 67, 55, 80, 64, 37, 29, 70, 51, 91, 51,
    18, 4, 78, 110, 51, 78, 110, 51, 52, 52, 52, 181, 230, 29, 125, 100, 100,
    125, 100, 100, 6, 6, 34, 105, 51, 108, 75, 30, 15, 91, 108, 130, 91, 108,
    130, 55, 25, 33, 60, 55, 145, 10, 5, 50, 30, 105, 75, 5, 45, 55, 20, 25,
    35, 15, 10, 50, 153, 164, 187, 27, 31, 42, 31, 39, 26, 41, 28, 36, 74, 62,
    12, 46, 56, 59, 75, 32, 11, 15, 15, 15, 67, 37, 37, 11, 35, 62, 21, 63, 70,
    100, 40, 1, 92, 30, 72, 42, 81, 1, 1, 81, 109, 56, 22, 97, 52, 52, 52
};

uint8_t paintColors[] = {
    0, 0, 0, 255, 0, 0, 255, 127, 0, 255, 255, 0, 127, 255, 0, 0, 255, 0, 0,
    255, 127, 0, 255, 255, 0, 127, 255, 0, 0, 255, 127, 0, 255, 255, 0, 255,
    255, 0, 127, 255, 0, 0, 255, 127, 0, 255, 255, 0, 127, 255, 0, 0, 255, 0,
    0, 255, 127, 0, 255, 255, 0, 127, 255, 0, 0, 255, 127, 0, 255, 255, 0, 255,
    255, 0, 127, 75, 75, 75, 255, 255, 255, 175, 175, 175, 255, 178, 125, 25,
    25, 25, 255, 255, 255, 255, 255, 255
};
// clang-format on

uint8_t waterColor[] = {0, 12, 255};
uint8_t lavaColor[] = {255, 30, 0};
uint8_t honeyColor[] = {255, 172, 0};
uint8_t shimmerColor[] = {155, 112, 233};

uint8_t surfaceColor[] = {155, 209, 255};
uint8_t undergroundColor[] = {84, 57, 42};
uint8_t cavernColor[] = {72, 64, 57};
uint8_t underworldColor[] = {51, 0, 0};
} // namespace

Color::Color(uint8_t *rgb)
{
    set(rgb[0], rgb[1], rgb[2]);
}

Color::Color(uint8_t r, uint8_t g, uint8_t b)
{
    set(r, g, b);
}

void Color::set(uint8_t r, uint8_t g, uint8_t b)
{
    abgr = (0xff << 24) | (b << 16) | (g << 8) | r;
}

uint8_t Color::r() const
{
    return abgr & 0xff;
}

uint8_t Color::g() const
{
    return (abgr >> 8) & 0xff;
}

uint8_t Color::b() const
{
    return (abgr >> 16) & 0xff;
}

Color getLayerColor(int y, World &world)
{
    if (y < world.undergroundLevel) {
        return surfaceColor;
    } else if (y < world.cavernLevel) {
        return undergroundColor;
    } else if (y < world.height - 230) {
        return cavernColor;
    } else {
        return underworldColor;
    }
}

inline uint8_t roundToByte(double val)
{
    return std::round(val);
}

Color blendColors(Color base, Color tint)
{
    return {
        roundToByte(0.7 * base.r() + 0.3 * tint.r()),
        roundToByte(0.7 * base.g() + 0.3 * tint.g()),
        roundToByte(0.7 * base.b() + 0.3 * tint.b()),
    };
}

Color getTileColor(int x, int y, World &world)
{
    Color color = getLayerColor(y, world);
    Tile &tile = world.getTile(x, y);
    if (tile.wallId != 0) {
        Color wallColor{wallColors + 3 * tile.wallId};
        if (tile.wallPaint != 0) {
            wallColor =
                blendColors(wallColor, paintColors + 3 * tile.wallPaint);
        }
        color = tile.echoCoatWall ? blendColors(color, wallColor) : wallColor;
    }
    switch (tile.liquid) {
    case Liquid::water:
        color = blendColors(waterColor, color);
        break;
    case Liquid::lava:
        color = blendColors(lavaColor, color);
        break;
    case Liquid::honey:
        color = blendColors(honeyColor, color);
        break;
    case Liquid::shimmer:
        color = blendColors(shimmerColor, color);
        break;
    default:
        break;
    }
    if (tile.blockId != -1) {
        Color blockColor{blockColors + 3 * tile.blockId};
        if (tile.actuated) {
            blockColor = blendColors(blockColor, {0, 0, 0});
        }
        if (tile.blockPaint != 0) {
            blockColor =
                blendColors(blockColor, paintColors + 3 * tile.blockPaint);
        }
        color =
            tile.echoCoatBlock ? blendColors(color, blockColor) : blockColor;
    }
    if (tile.wireRed) {
        color = blendColors(color, {255, 0, 0});
    }
    if (tile.wireBlue) {
        color = blendColors(color, {0, 0, 255});
    }
    if (tile.wireGreen) {
        color = blendColors(color, {0, 255, 0});
    }
    if (tile.wireYellow) {
        color = blendColors(color, {255, 255, 0});
    }
    return color;
}
